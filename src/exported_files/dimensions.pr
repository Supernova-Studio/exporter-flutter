class FhDimensions {
  const FhDimensions._();

{[ let brand = ds.currentBrand() /]}
{[ const measureTokensTree = ds.tokenGroupTreeByType("Measure", brand.id) /]}
{[ traverse measureTokensTree property subgroups into measureTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(measureTokenGroup) /]}
  {[ const measureTokenInGroups = ds.tokensByGroupId(measureTokenGroup.id) /]}
  {[ for measureToken in measureTokenInGroups ]}
  {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, measureToken.name) /]}
  {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
  {[ if (measureToken.description && measureToken.description !== "") ]}
{{ createDocumentationComment(measureToken.description, "  ") }}
  {[/]}
  static const double {{ fullTokenName }} = {[ inject "export_measure_value" context measureToken..addedBy(value) /]};

  {[/]}
{[/]}
}
